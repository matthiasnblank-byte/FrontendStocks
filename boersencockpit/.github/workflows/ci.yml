name: CI

on:
  push:
    branches:
      - main
      - next
  pull_request:

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.x']
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci

  lint:
    name: Lint & Format
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.x']
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - name: ESLint
        run: npm run lint
        env:
          ESLINT_DIFF_BASE: ${{ github.base_ref && format('origin/{0}', github.base_ref) || github.event.before }}
      - name: Prettier check
        run: npm run format:check
        env:
          PRETTIER_DIFF_BASE: ${{ github.base_ref && format('origin/{0}', github.base_ref) || github.event.before }}

  unit-tests:
    name: Unit tests & coverage
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.x']
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - name: Run tests with coverage
        run: npm run test:cov
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.node-version }}
          path: coverage
          if-no-files-found: error

  e2e:
    name: E2E tests
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.x']
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run build -- --configuration=production
      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          start: npx http-server dist/boersencockpit -p 4200
          wait-on: 'http://localhost:4200'
          wait-on-timeout: 120000
          config: baseUrl=http://localhost:4200

  build:
    name: Build
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.x']
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - name: Production build
        run: npm run build -- --configuration=production
      - name: Upload dist artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.node-version }}
          path: dist/boersencockpit
          if-no-files-found: error

  security:
    name: Security & Licenses
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.x']
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - name: npm audit
        run: npm audit --audit-level=high
      - name: License policy
        run: npm run licenses:check
